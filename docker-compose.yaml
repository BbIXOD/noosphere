services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
    - .env
    environment:
      - NODE_ENV
      - DATABASE_URL
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    develop:
      watch:
        - path: .
          action: rebuild
          target: app

  studio:
    image: node:18-alpine
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: npx prisma studio --browser=none --port=5555
    restart: unless-stopped
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - DATABASE_URL
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
